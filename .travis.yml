language: cpp
jobs:
  include:
    - os: osx
      osx_image: xcode11.2
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
        - LIBCXX=libstdc++11
        - BLDTYPE=Release
        - PATH="${HOME}/Library/Python/2.7/bin:${PATH}"
    - os: osx
      osx_image: xcode11.2
      compiler: clang
      env:
        - MATRIX_EVAL=""
        - LIBCXX=libc++
        - BLDTYPE=Release
        - PATH="${HOME}/Library/Python/2.7/bin:${PATH}"
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc && CXX=g++"
        - LIBCXX=libstdc++11
        - BLDTYPE=Debug
        - EXTRA_CMAKE="-DSIMDEE_ENABLE_SANITIZER_UNDEFINED:BOOL=ON"
    - os: linux
      dist: bionic
      compiler: clang
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"
        - LIBCXX=libstdc++11
        - BLDTYPE=Release
    - os: linux
      arch: arm64
      dist: bionic
      env:
        - MATRIX_EVAL="CC=gcc && CXX=g++"
        - LIBCXX=libstdc++11
        - BLDTYPE=Debug
        - EXTRA_CMAKE="-DSIMDEE_ENABLE_SANITIZER_ADDRESS:BOOL=ON"
    - os: linux
      dist: bionic
      compiler: gcc
      env:
        - MATRIX_EVAL="CC=gcc && CXX=g++"
        - LIBCXX=libstdc++11
        - BLDTYPE=Debug
        - EXTRA_CMAKE="-DSIMDEE_ENABLE_COVERAGE:BOOL=ON -DSIMDEE_INSTRUCTION_SET=AVX2"
      before_script:
        - pip install --user cpp-coveralls
      after_success:
        - cd ..
        - bash <(curl -s https://codecov.io/bash) -x /usr/bin/gcov
        - coveralls --exclude bench --exclude test --gcov-options '\-lp'

before_install:
  - eval "${MATRIX_EVAL}"

script:
  - mkdir build
  - cd build
  - pip install --user conan
  - conan remote add catchorg https://api.bintray.com/conan/catchorg/Catch2
  - conan install -s build_type=${BLDTYPE} -s compiler.libcxx=${LIBCXX} ..
  - cmake -DCMAKE_BUILD_TYPE=${BLDTYPE} -DSIMDEE_BUILD_TESTS:BOOL=ON ${EXTRA_CMAKE} ..
  - cmake --build .
  - test/simdee-test # running the test executable directly provides sanitizer output
